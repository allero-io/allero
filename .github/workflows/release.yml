
name: Release Workflow
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release Version:"
        required: true

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create and push tag
        run: |
          git config --global user.email "rnd@allero.io"
          git config --global user.name "Allero CI"
          git tag -a ${{ github.event.inputs.release_version }} -m "Automated release: ${{ github.event.inputs.release_version }}"
          git push origin ${{ github.event.inputs.release_version }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.0'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: 1.10.3
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALLERO_BUILD_VERSION: ${{ github.event.inputs.release_version }}

      - name: Push Formula
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        run: bash ./scripts/brew_push_formula.sh ${{ github.event.inputs.release_version }}

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags:
            - allero/allero-cli:${{ github.event.inputs.release_version }}
            - latest
      -
        name: Test
        run: |
          docker run --rm allero/allero-cli:${{ github.event.inputs.release_version }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags:
            - allero/allero-cli:${{ github.event.inputs.release_version }}
            - latest
